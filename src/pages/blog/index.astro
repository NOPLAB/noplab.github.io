---
import { Image } from 'astro:assets';
import BaseHead from '../../components/BaseHead.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Header from '../../components/Header.astro';
import BlogCard from '../../components/BlogCard.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts';
import * as contentful from 'contentful';

const client = contentful.createClient({
space: import.meta.env.CONTENTFUL_SPACE,
accessToken: import.meta.env.CONTENTFUL_ACCESSTOKEN,
environment: import.meta.env.CONTENTFUL_ENVIROMENT
});

const entries = await client.getEntries();
const items = entries.items;

const posts = items.sort(
	(a, b) => new Date(b.sys.updatedAt).valueOf() - new Date(a.sys.updatedAt).valueOf(),
	);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				max-width: 1200px;
				margin: 0 auto;
				padding: 2rem;
			}

			.blog-header {
				text-align: center;
				margin-bottom: 3rem;
			}

			.blog-title {
				font-size: 2.5rem;
				color: var(--text);
				margin-bottom: 1rem;
				font-weight: 600;
			}

			.search-container {
				max-width: 600px;
				margin: 0 auto 3rem;
				position: relative;
			}

			.search-input {
				width: 100%;
				padding: 1rem 1.5rem;
				border: 2px solid var(--border-light);
				border-radius: 50px;
				background: var(--card-bg);
				font-size: 1rem;
				color: var(--text);
				transition: all 0.3s ease;
			}

			.search-input:focus {
				outline: none;
				border-color: var(--accent);
				box-shadow: 0 0 0 3px rgba(23, 23, 23, 0.1);
			}

			.posts-container {
				max-width: 800px;
				margin: 0 auto;
			}

			.posts-list {
				list-style: none;
				margin: 0;
				padding: 0;
				display: flex;
				flex-direction: column;
				gap: 1rem;
			}

			.post-item {
				list-style: none;
			}

			.no-posts {
				text-align: center;
				padding: 3rem;
				color: var(--sub-text);
				font-size: 1.1rem;
			}

			@media (max-width: 768px) {
				main {
					padding: 1rem;
				}

				.blog-title {
					font-size: 2rem;
				}


				.search-input {
					padding: 0.8rem 1.2rem;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<div class="blog-header">
				<h1 class="blog-title">Blog</h1>
				<div class="search-container">
					<input 
						type="text" 
						class="search-input" 
						placeholder="記事を検索..." 
						id="searchInput"
					/>
				</div>
			</div>

			<div class="posts-container">
				<ul class="posts-list" id="postsList">
					{
						posts.map((post) => (
							<li class="post-item">
								<BlogCard post={post} showFormattedDate={true} />
							</li>
						))
					}
				</ul>
				{posts.length === 0 && (
					<div class="no-posts">
						記事が見つかりませんでした。
					</div>
				)}
			</div>
		</main>
		<Footer />
		<script>
			// 検索機能の実装
			const searchInput = document.getElementById('searchInput') as HTMLInputElement;
			const postsList = document.getElementById('postsList') as HTMLElement;
			const posts = Array.from(postsList?.querySelectorAll('.post-item') || []) as HTMLElement[];

			// 検索処理
			function filterPosts(searchTerm: string) {
				const filtered = posts.filter(post => {
					const titleElement = post.querySelector('.blog-card-title');
					const title = titleElement?.textContent?.toLowerCase() || '';
					return title.includes(searchTerm.toLowerCase());
				});

				// すべての投稿を非表示
				posts.forEach(post => {
					(post as HTMLElement).style.display = 'none';
				});

				// フィルターされた投稿のみ表示
				filtered.forEach(post => {
					(post as HTMLElement).style.display = 'block';
				});

				// 結果がない場合のメッセージ表示
				const noResultsMessage = document.querySelector('.no-results') as HTMLElement;
				if (filtered.length === 0 && searchTerm) {
					if (!noResultsMessage) {
						const message = document.createElement('div');
						message.className = 'no-results';
						message.style.cssText = 'text-align: center; padding: 3rem; color: var(--sub-text); font-size: 1.1rem;';
						message.textContent = '検索条件に一致する記事が見つかりませんでした。';
						postsList?.parentNode?.appendChild(message);
					} else {
						noResultsMessage.style.display = 'block';
					}
				} else if (noResultsMessage) {
					noResultsMessage.style.display = 'none';
				}
			}

			// 検索入力イベント
			searchInput?.addEventListener('input', (e) => {
				const target = e.target as HTMLInputElement;
				const searchTerm = target.value.trim();
				
				if (searchTerm === '') {
					// 空の場合はすべて表示
					posts.forEach(post => {
						(post as HTMLElement).style.display = 'block';
					});
					const noResultsMessage = document.querySelector('.no-results') as HTMLElement;
					if (noResultsMessage) {
						noResultsMessage.style.display = 'none';
					}
				} else {
					filterPosts(searchTerm);
				}
			});

			// Enter キーでの検索
			searchInput?.addEventListener('keypress', (e) => {
				if (e.key === 'Enter') {
					e.preventDefault();
					const target = e.target as HTMLInputElement;
					const searchTerm = target.value.trim();
					if (searchTerm) {
						filterPosts(searchTerm);
					}
				}
			});
		</script>
	</body>
</html>
