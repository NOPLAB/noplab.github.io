---
import { Image } from 'astro:assets';
import FormattedDate from './FormattedDate.astro';

interface Props {
    post: {
        sys: {
            id: string;
            createdAt: string;
            updatedAt: string;
        };
        fields: {
            title: string;
            heroImage?: {
                fields: {
                    file: {
                        url: string;
                    };
                };
            };
        };
    };
    showFormattedDate?: boolean;
}

const { post, showFormattedDate = false } = Astro.props;
---

<div class="blog-card">
    <a href={`/blog/${post.sys.id}/`} class="blog-card-link">
        <div class="blog-card-icon">
            {post.fields.heroImage?.fields?.file?.url ? (
                <Image 
                    width={60} 
                    height={60} 
                    src={post.fields.heroImage.fields.file.url} 
                    alt="" 
                />
            ) : (
                <span class="blog-card-icon-fallback">üìù</span>
            )}
        </div>
        <div class="blog-card-content">
            <h3 class="blog-card-title">{post.fields.title}</h3>
            <p class="blog-card-date">
                {showFormattedDate ? (
                    <>
                        ‰ΩúÊàêÊó•: <FormattedDate date={new Date(post.sys.createdAt)} />
                    </>
                ) : (
                    new Date(post.sys.updatedAt).toLocaleDateString('ja-JP')
                )}
            </p>
        </div>
    </a>
</div>

<style>
    .blog-card {
        background: var(--card-bg);
        border-radius: 16px;
        border: 1px solid var(--border-light);
        transition: all 0.3s ease;
        overflow: hidden;
    }

    .blog-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px var(--shadow-medium);
        border-color: var(--gray-light);
    }

    .blog-card-link {
        display: flex;
        align-items: center;
        padding: 1.5rem;
        text-decoration: none;
        color: inherit;
        gap: 1.5rem;
    }

    .blog-card-icon {
        flex-shrink: 0;
        width: 60px;
        height: 60px;
        border-radius: 12px;
        overflow: hidden;
        background: var(--gray-lightest);
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .blog-card-icon img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 0;
    }

    .blog-card-icon-fallback {
        font-size: 1.5rem;
        color: var(--sub-text);
    }

    .blog-card-content {
        flex: 1;
        min-width: 0;
    }

    .blog-card-title {
        font-size: 1.3rem;
        color: var(--text);
        margin: 0 0 0.5rem;
        font-weight: 600;
        line-height: 1.3;
        word-break: break-word;
    }

    .blog-card-date {
        font-size: 0.9rem;
        color: var(--sub-text);
        margin: 0;
        opacity: 0.8;
    }

    @media (max-width: 768px) {
        .blog-card-link {
            padding: 1rem;
            gap: 1rem;
        }

        .blog-card-icon {
            width: 50px;
            height: 50px;
        }

        .blog-card-title {
            font-size: 1.1rem;
        }
    }
</style>